/work/FAC/FGSE/IDYST/tbeucler/default/freddy0218/miniconda3/envs/fred_workenv/lib/python3.9/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator IncrementalPCA from version 1.1.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  warnings.warn(
  0%|          | 0/40 [00:00<?, ?it/s]  5%|▌         | 2/40 [00:00<00:02, 18.61it/s] 10%|█         | 4/40 [00:00<00:01, 18.38it/s] 15%|█▌        | 6/40 [00:00<00:01, 17.98it/s] 20%|██        | 8/40 [00:00<00:01, 17.93it/s] 25%|██▌       | 10/40 [00:00<00:01, 17.97it/s] 30%|███       | 12/40 [00:00<00:01, 18.21it/s] 35%|███▌      | 14/40 [00:00<00:01, 18.25it/s] 40%|████      | 16/40 [00:00<00:01, 18.39it/s] 48%|████▊     | 19/40 [00:01<00:01, 18.54it/s] 52%|█████▎    | 21/40 [00:01<00:01, 17.99it/s] 57%|█████▊    | 23/40 [00:01<00:00, 18.27it/s] 62%|██████▎   | 25/40 [00:01<00:00, 18.00it/s] 68%|██████▊   | 27/40 [00:01<00:00, 18.05it/s] 72%|███████▎  | 29/40 [00:01<00:00, 17.79it/s] 78%|███████▊  | 31/40 [00:01<00:00, 16.88it/s] 82%|████████▎ | 33/40 [00:01<00:00, 17.37it/s] 88%|████████▊ | 35/40 [00:01<00:00, 17.67it/s] 95%|█████████▌| 38/40 [00:02<00:00, 18.79it/s]100%|██████████| 40/40 [00:02<00:00, 18.23it/s]
  0%|          | 0/40 [00:00<?, ?it/s] 42%|████▎     | 17/40 [00:00<00:00, 166.90it/s] 85%|████████▌ | 34/40 [00:00<00:00, 154.17it/s]100%|██████████| 40/40 [00:00<00:00, 164.91it/s]
/work/FAC/FGSE/IDYST/tbeucler/default/freddy0218/TCGphy/2020_TC_CRF/dev/freddy0218/TCG_Rad_keras/parallel/run_ts_ensweights.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at  /home/conda/feedstock_root/build_artifacts/pytorch-recipe_1640869844479/work/torch/csrc/utils/tensor_new.cpp:198.)
  train_Xtensor = torch.FloatTensor(X_totrain).to(calc_device)
